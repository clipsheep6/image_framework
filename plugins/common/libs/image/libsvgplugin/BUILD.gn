# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/image_framework/ide/image_decode_config.gni")

use_new_skia = false
if (use_new_skia) {
  import("//third_party/skia/gn/skia.gni")
  import("//third_party/skia/modules/skshaper/skshaper.gni")
  import("//third_party/skia/modules/skunicode/skunicode.gni")
  import("//third_party/skia/modules/svg/svg.gni")

  config("public_config") {
    defines = [
      "SK_ENABLE_SVG",
      "SK_SHAPER_HARFBUZZ_AVAILABLE",
      "SK_UNICODE_AVAILABLE",
      "SKUNICODE_IMPLEMENTATION=1",
    ]
    include_dirs = [ "include" ]
  }

  skia_source_set("svgplugin_skunicode") {
    check_includes = false
    public_configs = [ ":public_config" ]

    public = skia_unicode_public
    sources = skia_unicode_sources
    sources += skia_unicode_runtime_icu_sources

    deps = [
      "//third_party/icu/icu4c:shared_icui18n",
      "//third_party/skia:skia",
    ]
  }

  skia_source_set("svgplugin_skshaper") {
    check_includes = false
    public_configs = [ ":public_config" ]

    public = skia_shaper_public
    sources = skia_shaper_primitive_sources

    include_dirs = [ "//third_party/skia/third_party/externals/harfbuzz/src" ]
    sources += skia_shaper_harfbuzz_sources

    deps = [
      ":svgplugin_skunicode",
      "//third_party/skia:skia",
    ]
  }

  skia_source_set("svgplugin_svg") {
    check_includes = false
    public_configs = [ ":public_config" ]

    public = skia_svg_public
    sources = skia_svg_sources

    deps = [
      ":svgplugin_skshaper",
      "//third_party/skia:skia",
    ]
  }
}

ohos_shared_library("svgplugin") {
  if (!use_clang_android && !use_clang_ios) {
    sanitize = {
      cfi = true
      debug = false
    }
  }

  sources = [
    "src/plugin_export.cpp",
    "src/svg_decoder.cpp",
  ]

  include_dirs = [
    "$image_subsystem/plugins/manager/include",
    "$image_subsystem/plugins/manager/include/image",
    "$image_subsystem/plugins/manager/include/pluginbase",
    "$image_subsystem/plugins/common/libs/image/libsvgplugin/include",
    "$image_subsystem/interfaces/innerkits/include",
    "$image_subsystem/frameworks/innerkitsimpl/utils/include",
    "$graphic_subsystem/utils/color_manager/export",
  ]
  if (use_new_skia) {
    include_dirs += [
      "//third_party/skia",
      "//third_party/skia/include/core",
    ]
  } else {
    include_dirs += [
      "//third_party/flutter/skia/include/codec",
      "//third_party/flutter/skia",
    ]
  }

  deps = [
    "$graphic_subsystem/utils/color_manager:color_manager",
    "$image_subsystem/plugins/manager:pluginmanager",
  ]
  if (use_new_skia) {
    deps += [
      ":svgplugin_svg",
      "//third_party/skia",
    ]
  } else {
    deps += [ "//third_party/flutter/build/skia/ohos:skia_ohos" ]
  }

  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
  ]

  cflags = [ "-DIMAGE_COLORSPACE_FLAG" ]
  if (use_new_skia) {
    cflags += [ "-DUSE_NEWSVG_IN_NEWSKIA_FLAG" ]
  }
  part_name = "multimedia_image_framework"
  subsystem_name = "multimedia"
}

ohos_prebuilt_etc("svgpluginmetadata") {
  source = "svgplugin.pluginmeta"
  relative_install_dir = "multimediaplugin/image"
  subsystem_name = "multimedia"
  part_name = "multimedia_image_framework"
}
