# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/media_library/media_library.gni")

MEDIA_LIB_MTP_BASE_DIR = "${MEDIA_LIB_SERVICES_DIR}/media_mtp"

ohos_shared_library("media_mtp") {
  install_enable = true

  sources = [
    "${MEDIA_LIB_MTP_BASE_DIR}/src/header_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_data_utils.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_driver.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_error_utils.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_event.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_file_observer.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_medialibrary_manager.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_monitor.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_operation.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_operation_utils.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_packet.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_packet_tools.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_service.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/mtp_storage_manager.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/object_info.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/packet_payload_factory.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/close_session_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/copy_object_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/delete_object_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_device_info_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_device_prop_desc_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_device_prop_value_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_num_objects_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_object_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_object_handles_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_object_info_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_object_prop_desc_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_object_prop_list_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_object_prop_value_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_object_props_supported_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_object_references_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_partial_object_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_storage_ids_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_storage_info_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/get_thumb_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/move_object_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/object_event_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/open_session_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/resp_common_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/send_object_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/send_object_info_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/set_device_prop_value_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/set_object_prop_value_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/payload_data/set_object_references_data.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/property.cpp",
    "${MEDIA_LIB_MTP_BASE_DIR}/src/storage.cpp",
  ]

  cflags = [ "-fPIC" ]
  cflags += [ "-Wall" ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  cflags_cc = cflags
  include_dirs = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include/hilog",
    "${MEDIA_LIB_MTP_BASE_DIR}/include",
    "${MEDIA_LIB_BASE_DIR}/interfaces/inner_api/media_library_helper/include",
    "${MEDIA_LIB_INNERKITS_DIR}/media_library_helper/include",
    "${MEDIA_LIB_SERVICES_DIR}/media_library/include",
    "${MEDIA_LIB_BASE_DIR}/frameworks/utils/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//drivers/peripheral/base",
    "//drivers/peripheral/display/interfaces/include",
    "${ABILITY_RUNTIME_PATH}/interfaces/kits/native/ability/native",
    "${ABILITY_RUNTIME_INNER_API_PATH}/dataobs_manager/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/distributeddatamgr/appdatamgr/relational_store/interfaces/inner_api/appdatafwk/include",
    "//foundation/distributeddatamgr/appdatamgr/relational_store/interfaces/inner_api/rdb/include",
    "//foundation/multimedia/media_library/frameworks/innerkitsimpl/media_library_helper/include",
    "//foundation/multimedia/media_library/interfaces/inner_api/media_library_helper/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/interfaces/inner_api/provider/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/interfaces/inner_api/common/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/interfaces/inner_api/consumer/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/frameworks/native/common/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/frameworks/native/provider/include",
    "//base/powermgr/battery_manager/interfaces/innerkits/native/include",
  ]

  deps = [
    "${ABILITY_RUNTIME_INNER_API_PATH}/dataobs_manager:dataobs_manager",
    "${ABILITY_RUNTIME_PATH}/frameworks/native/ability/native:abilitykit_native",
    "${ABILITY_RUNTIME_PATH}/frameworks/native/appkit:app_context",
    "${ABILITY_RUNTIME_PATH}/frameworks/native/appkit:appkit_native",
    "${MEDIA_LIB_INNERKITS_DIR}/media_library_helper:media_library",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//base/powermgr/battery_manager/interfaces/innerkits:batterysrv_client",
    "//third_party/openssl:libcrypto_shared",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "hitrace_native:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "multimedia_player_framework:media_client",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "storage_service:storage_manager_sa_proxy",
  ]

  part_name = "media_library"
  subsystem_name = "multimedia"
}

ohos_shared_library("mtpservice") {
  include_dirs = [
    "//foundation/arkui/napi/interfaces/kits",
    "//foundation/multimedia/media_library/interfaces/kits/js/include",
    "//foundation/multimedia/media_library/frameworks/services/media_mtp/include",
  ]
  ldflags = [ "-Wl" ]

  sources = [ "//foundation/multimedia/media_library/frameworks/js/src/mtp_service_napi.cpp" ]

  deps = [
    "//foundation/arkui/napi:ace_napi",
    "//foundation/multimedia/media_library/frameworks/services/media_mtp:media_mtp",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:napi_base_context",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "ipc_js:rpc",
  ]

  relative_install_dir = "module/multimedia"
  subsystem_name = "multimedia"
  part_name = "media_library"
}
