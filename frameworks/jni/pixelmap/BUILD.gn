# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/image_standard/ide/image_decode_config.gni")

config("pixelmap_jni_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//utils/jni/jnikit/include",
    "//foundation/multimedia/image_standard/interfaces/innerkits/include",
    "//foundation/multimedia/image_standard/interfaces/kits/native/include",
    "//foundation/multimedia/utils/include",
    "//foundation/multimedia/image_standard/adapter/frameworks/bitmapconverter/native/include",
    "//utils/jni/common/include",
    "//foundation/multimedia/image_standard/frameworks/jni/common/include",
    "//foundation/multimedia/image_standard/frameworks/jni/pixelmap/include",
    "//foundation/multimedia/image_standard/adapter/frameworks/pixelconverter/include",
  ]

  if (use_mingw_win) {
    include_dirs += [
      "//foundation/multimedia/image_standard/mock/native/include",
      # "//foundation/multimedia/image_standard/mock/native/include/secure",
    ]
  } else if (use_clang_mac) {
    include_dirs += [
      "//foundation/multimedia/image_standard/mock/native/include",
      "//utils/native/base/include",
    ]
  } else {
    include_dirs += [
      "//sdk/aosp-arm64/communication/ipc_core/include/",
      "//utils/native/base/include",
    ]
  }
}

group("g_pixelmap_jni") {
  deps = [ ":pixelmap_jni" ]
}

ohos_shared_library("pixelmap_jni") {
  if (use_mingw_win) {
    defines = image_decode_windows_defines
    sources = [
      "//foundation/multimedia/image_standard/frameworks/jni/common/src/ohos_image_jni_utils.cpp",
      "src/ohos_image_pixelmap.cpp",
    ]

    configs = [ ":pixelmap_jni_config" ]

    deps = [
      # "//foundation/multimedia/image/adapter/frameworks/bitmapconverter/native:static_bitmapconverter",
      "//foundation/multimedia/image_standard/adapter/frameworks/pixelconverter:pixelconvertadapter_static",
      "//foundation/multimedia/image_standard/interfaces/innerkits:image_static",

      # "//foundation/multimedia/image/mock/native:utils_mock_static",
      "//utils/jni:utils_jnikit_win",
    ]
  } else if (use_clang_mac) {
    defines = image_decode_mac_defines

    sources = [
      "//foundation/multimedia/image_standard/frameworks/jni/common/src/ohos_image_jni_utils.cpp",
      "src/ohos_image_pixelmap.cpp",
    ]

    configs = [ ":pixelmap_jni_config" ]

    deps = [
      # "//foundation/multimedia/image/adapter/frameworks/bitmapconverter/native:static_bitmapconverter",
      "//foundation/multimedia/image_standard/adapter/frameworks/pixelconverter:pixelconvertadapter_static",
      "//foundation/multimedia/image_standard/interfaces/innerkits:image_static",
      "//foundation/multimedia/image_standard/mock/native:utils_mock_static",
      "//utils/jni:utils_jnikit_mac",
      "//utils/native/base:utilsecurec",
    ]
  } else {
    sources = [
      "//foundation/multimedia/image_standard/frameworks/jni/common/src/ohos_image_jni_utils.cpp",
      "src/ohos_image_pixelmap.cpp",
    ]

    configs = [ ":pixelmap_jni_config" ]

    deps = [
      "//foundation/multimedia/image_standard/adapter/frameworks/bitmapconverter/native:bitmapconverter",
      "//foundation/multimedia/image_standard/adapter/frameworks/pixelconverter:pixelconvertadapter",
      "//foundation/multimedia/image_standard/interfaces/innerkits:image",
      "//utils/jni:utils_jni",
      "//utils/jni:utils_jnikit",
      "//utils/native/base:utils",
    ]

    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_core",
    ]
  }

  subsystem_name = "multimedia"
  part_name = "multimedia_image"
}
