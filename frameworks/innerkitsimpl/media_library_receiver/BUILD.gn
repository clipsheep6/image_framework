# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

group("media_library_receiver_packages") {
  deps = [ ":media_library_receiver", ":media_library_receiver_test" ]
}

config("media_library_receiver_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "./",
    "./include",
    "//foundation/multimedia/medialibrary_standard/interfaces/innerkits/native/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//utils/native/base/include",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
    "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_rdb/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_appdatafwk/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler/include",
]

  cflags = [
    "-Wall",
    "-Werror",
  ]
}

ohos_source_set("media_library_receiver_source") {
  sources = [
    "src/inner/common/policy_executor.cpp",
    "src/inner/common/task_dispatch.cpp",
    "src/inner/common/task_executor.cpp",
    "src/inner/event/execute_event.cpp",
    "src/inner/executors/distributed_devices_batch_recycle_executor.cpp",
    "src/inner/executors/empty_folder_batch_recycle_executor.cpp",
    "src/inner/executors/lcd_batch_recycle_executor.cpp",
    "src/inner/executors/thumbnail_batch_gen_executor.cpp",
    "src/inner/executors/thumbnail_batch_recycle_executor.cpp",
    "src/inner/executors/trash_file_batch_recycle_executor.cpp",
    "src/inner/policys/distributed_devices_batch_recycle_policy.cpp",
    "src/inner/policys/empty_folder_batch_recycle_policy.cpp",
    "src/inner/policys/lcd_batch_recycle_policy.cpp",
    "src/inner/policys/thumbnail_batch_gen_policy.cpp",
    "src/inner/policys/thumbnail_batch_recycle_policy.cpp",
    "src/inner/policys/trash_file_batch_recycle_policy.cpp",
    "src/inner/utils/receiver_utils.cpp",
    "src/inner/task_event_receiver.cpp",
    "src/media_event_receiver.cpp",
  ]

  configs = [ ":media_library_receiver_config" ]
}

ohos_shared_library("media_library_receiver") {
  install_enable = true

  deps = [
    ":media_library_receiver_source",
    "//utils/native/base:utils",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "native_appdatamgr:native_appdatafwk",
    "native_appdatamgr:native_dataability",
    "native_appdatamgr:native_rdb",
  ]

  part_name = "multimedia_media_library_standard"
  subsystem_name = "multimedia"
}

ohos_source_set("media_library_receiver_test_source") {
  sources = [ "//foundation/multimedia/medialibrary_standard/interfaces/innerkits/native/test/media_library_receiver_test.cpp" ]

  configs = [ ":media_library_receiver_config" ]
}

ohos_executable("media_library_receiver_test") {
  install_enable = true

  deps = [
    ":media_library_receiver",
    ":media_library_receiver_test_source",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
  ]

  part_name = "multimedia_media_library_standard"
  subsystem_name = "multimedia"
}
