# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/media_library/media_library.gni")
MEDIA_LIB_MTP_BASE_DIR = "${MEDIA_LIB_SERVICES_DIR}/media_mtp"
group("unittest") {
  testonly = true

  deps = [ ":mtp_native_test" ]
}

ohos_unittest("mtp_native_test") {
  module_out_path = "media_library/mtp_native_test"

  include_dirs = [
    "./include",
    "../get_self_permissions/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include/hilog",
    "${MEDIA_LIB_MTP_BASE_DIR}/include",
    "${MEDIA_LIB_BASE_DIR}/interfaces/inner_api/media_library_helper/include",
    "${MEDIA_LIB_INNERKITS_DIR}/media_library_helper/include",
    "${MEDIA_LIB_SERVICES_DIR}/media_library/include",
    "${MEDIA_LIB_BASE_DIR}/frameworks/utils/include",
    "//foundation/ability/ability_base/interfaces/kits/native/want/include",
    "//foundation/ability/ability_base/interfaces/kits/native/uri/include",
    "//foundation/ability/ability_base/interfaces/inner_api/base/include",
    "//foundation/ability/ability_runtime/services/abilitymgr/include",
    "//foundation/filemanagement/storage_service/services/storage_manager/include",
    "//foundation/filemanagement/storage_service/services/storage_manager/include",
    "//foundation/filemanagement/storage_service/interfaces/kits/js/storage_manager/include",
    "//foundation/filemanagement/storage_service/interfaces/innerkits/storage_manager/native",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//drivers/peripheral/base",
    "//drivers/peripheral/display/interfaces/include",
    "${ABILITY_RUNTIME_PATH}/interfaces/kits/native/ability/native",
    "${ABILITY_RUNTIME_INNER_API_PATH}/dataobs_manager/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/distributeddatamgr/appdatamgr/relational_store/interfaces/inner_api/appdatafwk/include",
    "//foundation/distributeddatamgr/appdatamgr/relational_store/interfaces/inner_api/rdb/include",
    "//foundation/multimedia/media_library/frameworks/innerkitsimpl/media_library_helper/include",
    "//foundation/multimedia/media_library/interfaces/inner_api/media_library_helper/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/interfaces/inner_api/provider/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/interfaces/inner_api/common/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/interfaces/inner_api/consumer/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/frameworks/native/common/include",
    "//foundation/distributeddatamgr/appdatamgr/data_share/frameworks/native/provider/include",
    "//utils/native/base/include",
    "${MEDIA_LIB_BASE_DIR}/frameworks/innerkitsimpl/test/unittest/medialibrary_mtp_test/include",

    # Security stuff
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "//base/security/access_token/interfaces/innerkits/privacy/include",

    "//foundation/multimedia/media_library/frameworks/services/media_mtp/include/",
  ]

  sources = [
    "../get_self_permissions/src/get_self_permissions.cpp",
    "../medialibrary_mtp_test/src/mock_mtp_driver.cpp",
    "../medialibrary_mtp_test/src/mtp_test.cpp",
    "./src/mtp_data_utils_test.cpp",
    "./src/mtp_native_test.cpp",
  ]

  deps = [
    "${ABILITY_RUNTIME_INNER_API_PATH}/dataobs_manager:dataobs_manager",
    "${ABILITY_RUNTIME_PATH}/frameworks/native/ability/native:abilitykit_native",
    "${ABILITY_RUNTIME_PATH}/frameworks/native/appkit:app_context",
    "${ABILITY_RUNTIME_PATH}/frameworks/native/appkit:appkit_native",
    "${MEDIA_LIB_INNERKITS_DIR}/media_library_helper:media_library",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/multimedia/media_library/frameworks/innerkitsimpl/media_library_manager:media_library_manager",
    "//foundation/multimedia/media_library/frameworks/services/media_mtp:media_mtp",
    "//third_party/openssl:libcrypto_shared",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "drivers_interface_usb:usbfn_mtp_idl_headers",
    "hitrace_native:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "multimedia_player_framework:media_client",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "storage_service:storage_manager_sa_proxy",
  ]

  if (defined(global_parts_info.powermgr_battery_manager)) {
    external_deps += [ "battery_manager:batterysrv_client" ]
  }
}
