# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../media_library.gni")

group("unittest") {
  testonly = true

  deps = [ ":medialibrary_queryperf_unittest" ]
}

ohos_unittest("medialibrary_queryperf_unittest") {
  module_out_path = "media_library/medialibraryextention"

  include_dirs = [
    "./include",
    "../get_self_permissions/include",
    "../medialibrary_unittest_utils/include",
  ]

  sources = [
    "../get_self_permissions/src/get_self_permissions.cpp",
    "../medialibrary_unittest_utils/src/medialibrary_unittest_utils.cpp",
    "./src/medialibrary_queryperf_test.cpp",
  ]

  deps = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library_packages",
    "${MEDIALIB_INNERKITS_PATH}/media_library_manager:media_library_manager",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "kv_store:distributeddata_inner",
    "napi:ace_napi",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
    "samgr:samgr_proxy",
  ]

  if (is_standard_system) {
    external_deps += [ "hilog:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  resource_config_file =
      "${MEDIALIB_INNERKITS_PATH}/test/unittest/resources/ohos_test.xml"
}
